
1.TF-IDF：
优点一：轻量高效，训练模型较为简单，一般为线性模型即可，训练速度较快。
优点二：需求资源较少，无需GPU，在CPU上即可完成。
优点三：部署简单，模型训练完成后即可部署使用，对部署环境要求较低。

缺点一：因为是借助本地数据构建词汇表，因此对数据的质量要求高。
缺点二：使用场景单一，泛华能力较弱，无法适用于外部数据。
缺点三：无法理解语义想近的词汇。



2.Regex：
优点一：因为只需要根据正则表达式匹配字符即可，因此效率极高，毫秒级就能得到答案。
优点二：因为正则表达式由人为编写而成，因此可解释性强。
优点三：部署更为便捷。

缺点一：局限性极大，只能匹配表达式中存在的字符，其余字符一律无法识别。
缺点二：泛化能力极差。
缺点三：随着业务变得越来越复杂，会导致规则爆炸，维护成本大。


3.prompt工程
优点一：无需人工训练模型，借助外部大模型即可完成任务。
优点二：可以别语义详尽的文本信息，能够完成多标签分类，多轮推理，复杂业务场景。
优点三：可以快速迭代，只需修改提示词即可，简单便捷。

缺点一：需要借助大模型API，存在中间费用。
缺点二：网络通信存在不稳定性，可能会出现网络中断等突发情况，并且大模型的推理过程需要更长的时间，效率会偏低。
缺点三：需要不断优化完善提示词，才能让大模型更好的理解任务需求，以及上下文，任何偏差都有可能导致模型给出不一样的答案。


4.bert
优点一：语义理解能力强，能够理解各词汇以及上下文之间的关系。
优点二：泛化能力强，哪怕是训练集为存在的数据，也能够通过自我理解完成分类。
优点三：无需人工分词，去除停用的，提取特征向量等操作

缺点一：训练过程所需数据较大，训练周期长，需要借助GPU，需要更多地资源和算力。
缺点二：数据改变后需要重新训练模型，开销大，更新难度较大。
缺点三：部署文件较大，不如TF-IDF轻量。
