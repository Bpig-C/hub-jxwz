from fastapi import FastAPI, HTTPException, Request
from openai import OpenAI
from pydantic import BaseModel

# 初始化FastAPI应用
app = FastAPI()

# 初始化OpenAI客户端
client = OpenAI(
    api_key="sk-5ebc25ad675b4a77b1c27549f485f51c",
    base_url="https://dashscope.aliyuncs.com/compatible-mode/v1",
)


class ChatRequest(BaseModel):
    model: str = "qwen-plus"
    messages: list[dict] = [
        {
            "role": "system",
            "content": """你是一个专业信息抽取专家，请对下面的文本抽取他的领域类别、意图类型、实体标签，
                         -待选的领域类型：music/app/radio/lottery/stock/novel/weather/match/map/website/news/message/contacts/translation/tvchannel/cinemas/cookbook/joke/riddle/telephone/video/train/poetry/flight/epg/health/email/bus/story 
                         -待选的意图类型：OPEN/SEARCH/REPLAY_ALL/NUMBER_QUERY/DIAL/CLOSEPRICE_QUERY/SEND/LAUNCH/PLAY/REPLY/RISERATE_QUERY/DOWNLOAD/QUERY/LOOK_BACK/CREATE/FORWARD/DATE_QUERY/SENDCONTACTS/DEFAULT/TRANSLATION/VIEW/NaN/ROUTE/POSITION
                         -待选的实体标签：code/Src/startDate_dateOrig/film/endLoc_city/artistRole/location_country/location_area/author/startLoc_city/season/dishNamet/media/datetime_date/episode/teleOperator/questionWord/receiver/ingredient/name/startDate_time/startDate_date/location_province/endLoc_poi/artist/dynasty/area/location_poi/relIssue/Dest/content/keyword/target/startLoc_area/tvchannel/type/song/queryField/awayName/headNum/homeName/decade/payment/popularity/tag/startLoc_poi/date/startLoc_province/endLoc_province/location_city/absIssue/utensil/scoreDescr/dishName/endLoc_area/resolution/yesterday/timeDescr/category/subfocus/theatre/datetime_time
                       """
        },
        {
            "role": "user",
            "content": ""
        }
    ]


@app.post("/chat")
async def chat(request: ChatRequest):
    try:
        user_input = request.messages[1]["content"]
        request.messages[1]["content"] = user_input
        response = client.chat.completions.create(
            model=request.model,
            messages=request.messages
        )
        return {"response": response.choices[0].message.content}
    except Exception as e:
        raise HTTPException(status_code=500, detail=str(e))


if __name__ == "__main__":
    import uvicorn
    uvicorn.run(app, host="127.0.0.1", port=8000)
